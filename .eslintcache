[{"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\index.js":"1","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\App.js":"2","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\reportWebVitals.js":"3","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\searchBar\\index.js":"4","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\searchBar\\styles.js":"5","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\BottomAppBar\\index.js":"6","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\BottomAppBar\\styles.js":"7","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\bottomAppBar\\index.js":"8","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\bottomAppBar\\styles.js":"9","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\infoClientPin\\index.js":"10","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\infoClientPin\\styles.js":"11","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\pinFilterBar\\index.js":"12","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\pinFilterBar\\styles.js":"13","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\clientInfo\\index.js":"14","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\clientInfo\\styles.js":"15","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\map\\index.js":"16","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\store\\Clients.js":"17","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\pages\\list\\index.js":"18","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\config\\history.js":"19","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\pages\\home\\index.js":"20","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\config\\Routes.js":"21","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\config\\routes.js":"22","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\pages\\notFound\\index.js":"23","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\pin\\index.js":"24","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\pin\\styles.js":"25","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\modal\\index.js":"26","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\modal\\styles.js":"27","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\filter\\index.js":"28","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\filter\\styles.js":"29","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\filter\\input\\index.js":"30","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\filter\\input\\styles.js":"31","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\pages\\list\\styles.js":"32","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\leadinfo\\index.js":"33","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\leadinfo\\styles.js":"34","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\cardInfo\\index.js":"35","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\selectCostumer\\index.js":"36","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\selectCostumer\\styles.js":"37","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\pages\\script\\index.js":"38","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\walkScript\\index.js":"39","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\walkScript\\styles.js":"40","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\newLead\\index.js":"41","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\newLead\\styles.js":"42","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\map\\polynes.js":"43","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\store\\reducers\\screenReducer.js":"44","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\store\\reducers\\clientReducer.js":"45","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\store\\initialState.js":"46","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\pages\\home\\styles.js":"47","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\store\\reducers\\leadReducer.js":"48","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\newLead\\formik.js":"49","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\alert\\index.js":"50","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\services\\api.js":"51","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\leadinfo\\editLead\\index.js":"52","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\leadinfo\\editLead\\formik.js":"53","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\leadinfo\\editLead\\styles.js":"54","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\clientInfo\\editClient\\index.js":"55","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\clientInfo\\editClient\\formik.js":"56","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\clientInfo\\editClient\\styles.js":"57","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\searchBar\\searchAddress\\index.js":"58","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\searchBar\\searchAddress\\styles.js":"59"},{"size":363,"mtime":1610837176397,"results":"60","hashOfConfig":"61"},{"size":639,"mtime":1610761736346,"results":"62","hashOfConfig":"61"},{"size":362,"mtime":499162500000,"results":"63","hashOfConfig":"61"},{"size":1993,"mtime":1611589150024,"results":"64","hashOfConfig":"61"},{"size":1020,"mtime":1611511488905,"results":"65","hashOfConfig":"61"},{"size":1794,"mtime":1610679458414,"results":"66","hashOfConfig":"61"},{"size":1255,"mtime":1610681677077,"results":"67","hashOfConfig":"61"},{"size":3136,"mtime":1611589259132,"results":"68","hashOfConfig":"61"},{"size":1865,"mtime":1611413537360,"results":"69","hashOfConfig":"61"},{"size":2096,"mtime":1611092726688,"results":"70","hashOfConfig":"61"},{"size":2175,"mtime":1611092888163,"results":"71","hashOfConfig":"61"},{"size":3957,"mtime":1611594060409,"results":"72","hashOfConfig":"61"},{"size":1355,"mtime":1611529841231,"results":"73","hashOfConfig":"61"},{"size":4640,"mtime":1611589393565,"results":"74","hashOfConfig":"61"},{"size":2745,"mtime":1611413578031,"results":"75","hashOfConfig":"61"},{"size":4526,"mtime":1611590870663,"results":"76","hashOfConfig":"61"},{"size":2737,"mtime":1611538943871,"results":"77","hashOfConfig":"61"},{"size":1958,"mtime":1611501174428,"results":"78","hashOfConfig":"61"},{"size":115,"mtime":1611413911685,"results":"79","hashOfConfig":"61"},{"size":926,"mtime":1611583415253,"results":"80","hashOfConfig":"61"},{"size":418,"mtime":1610762044944,"results":"81","hashOfConfig":"61"},{"size":550,"mtime":1611413913885,"results":"82","hashOfConfig":"61"},{"size":148,"mtime":1610808705403,"results":"83","hashOfConfig":"61"},{"size":2638,"mtime":1611532538379,"results":"84","hashOfConfig":"61"},{"size":841,"mtime":1611532414442,"results":"85","hashOfConfig":"61"},{"size":1449,"mtime":1611442585490,"results":"86","hashOfConfig":"61"},{"size":502,"mtime":1611413804599,"results":"87","hashOfConfig":"61"},{"size":6003,"mtime":1611617914260,"results":"88","hashOfConfig":"61"},{"size":1015,"mtime":1611608483459,"results":"89","hashOfConfig":"61"},{"size":3207,"mtime":1611413686577,"results":"90","hashOfConfig":"61"},{"size":341,"mtime":1611413692764,"results":"91","hashOfConfig":"61"},{"size":156,"mtime":1611413940602,"results":"92","hashOfConfig":"61"},{"size":5435,"mtime":1611589429117,"results":"93","hashOfConfig":"61"},{"size":3119,"mtime":1611413735437,"results":"94","hashOfConfig":"61"},{"size":336,"mtime":1611025987837,"results":"95","hashOfConfig":"61"},{"size":2441,"mtime":1611585320396,"results":"96","hashOfConfig":"61"},{"size":851,"mtime":1611413894425,"results":"97","hashOfConfig":"61"},{"size":843,"mtime":1611593370105,"results":"98","hashOfConfig":"61"},{"size":6094,"mtime":1611593073556,"results":"99","hashOfConfig":"61"},{"size":2217,"mtime":1611537449540,"results":"100","hashOfConfig":"61"},{"size":7297,"mtime":1611616367291,"results":"101","hashOfConfig":"61"},{"size":2255,"mtime":1611413825761,"results":"102","hashOfConfig":"61"},{"size":2997,"mtime":1611590991773,"results":"103","hashOfConfig":"61"},{"size":3447,"mtime":1611584057072,"results":"104","hashOfConfig":"61"},{"size":245,"mtime":1611413954574,"results":"105","hashOfConfig":"61"},{"size":1739,"mtime":1611616404711,"results":"106","hashOfConfig":"61"},{"size":0,"mtime":1611239829069,"results":"107","hashOfConfig":"61"},{"size":364,"mtime":1611442967518,"results":"108","hashOfConfig":"61"},{"size":1345,"mtime":1611618259287,"results":"109","hashOfConfig":"61"},{"size":1561,"mtime":1611584217455,"results":"110","hashOfConfig":"61"},{"size":278,"mtime":1611340784149,"results":"111","hashOfConfig":"61"},{"size":11848,"mtime":1611545569595,"results":"112","hashOfConfig":"61"},{"size":1351,"mtime":1611618272759,"results":"113","hashOfConfig":"61"},{"size":3073,"mtime":1611413771771,"results":"114","hashOfConfig":"61"},{"size":10576,"mtime":1611427740622,"results":"115","hashOfConfig":"61"},{"size":1498,"mtime":1611618393479,"results":"116","hashOfConfig":"61"},{"size":2727,"mtime":1611413634501,"results":"117","hashOfConfig":"61"},{"size":2714,"mtime":1611545638835,"results":"118","hashOfConfig":"61"},{"size":784,"mtime":1611511507679,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"mgviju",{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"122"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"122"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"122"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"122"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\index.js",[],["256","257"],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\App.js",["258","259","260","261"],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\reportWebVitals.js",[],["262","263"],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\searchBar\\index.js",["264"],"import React, { useState, memo} from \"react\";\r\nimport { useClienteData } from \"../../store/Clients\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useStyles } from \"./styles\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport SearchBarAddres from './searchAddress'\r\n\r\nfunction SearchBarApp() {\r\n  let location = useLocation();\r\n  const classes = useStyles();\r\n  const { screen, dispatchScreen } = useClienteData();\r\n\r\n  const searchOnFocus = () => {\r\n    console.log(\"search ativada\");\r\n    dispatchScreen({ type: \"ACTIVE_SEARCH\", payload: true });\r\n  };\r\n  const onChangeValue = (value) => {\r\n    location.pathname === \"/list\" &&\r\n      dispatchScreen({ type: \"SEARCH_VALUE_LIST\", payload: value });\r\n    location.pathname === \"/roteiro\" &&\r\n      dispatchScreen({ type: \"SEARCH_VALUE_SCRIPT\", payload: value });\r\n      \r\n  };\r\n  const searchOnBlur = () => {\r\n    console.log(\"search desativada\");\r\n    dispatchScreen({ type: \"ACTIVE_SEARCH\", payload: false });\r\n  };\r\n\r\n  const clearValue = () => {\r\n    dispatchScreen({ type: \"SEARCH_VALUE_LIST\", payload: false });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <div className={classes.bar}>\r\n        {location.pathname === \"/\" ? (\r\n          <SearchBarAddres/>\r\n        ) : (\r\n          <SearchBar\r\n            placeholder=\"Nome do estabelecimento\"\r\n            onChange={(newValue) => onChangeValue(newValue)}\r\n            onFocus={() => {\r\n              searchOnFocus();\r\n            }}\r\n            onBlur={() => {\r\n              searchOnBlur();\r\n            }}\r\n            onCancelSearch={() => clearValue()}\r\n            // onRequestSearch={() => doSomethingWith(this.state.value)}\r\n          />\r\n        )}\r\n        {screen.newLead.clickOn && location.pathname === \"/\" && (\r\n          <div variant=\"filled\" className={classes.alert}>\r\n            Escolha o local do novo lead dentro do polo\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(SearchBarApp);\r\n","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\searchBar\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\BottomAppBar\\index.js",["265"],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\BottomAppBar\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\bottomAppBar\\index.js",["266"],"import React, {memo} from \"react\";\r\nimport { useClienteData } from \"../../store/Clients\";\r\nimport { INITIAL_LOCATION } from \"../../store/initialState\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport MapIcon from \"@material-ui/icons/Map\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport { Link } from \"react-router-dom\";\r\nimport { history } from \"../../config/history\";\r\nimport { useStyles } from \"./styles\";\r\n\r\n function BottomAppBar() {\r\n  const { screen, dispatchScreen, setLocalization } = useClienteData();\r\n  const classes = useStyles();\r\n\r\n  const goToFunnel = async () => {\r\n    await dispatchScreen({\r\n      type: \"ACTIVE_FUNNEL\",\r\n      payload: screen.funnel ? false : true,\r\n    });\r\n  };\r\n  const goToList = () => {\r\n    history.push(\"/list\");\r\n  };\r\n\r\n  const goToMap = () => {\r\n    history.push(\"/\");\r\n    setLocalization(INITIAL_LOCATION);\r\n  };\r\n\r\n  const goToScript = () => {\r\n    history.push(\"/\");\r\n    setLocalization(INITIAL_LOCATION);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.space} />\r\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n        <Toolbar className={classes.iconsBar}>\r\n          <Link\r\n            type=\"div\"\r\n            to={\"./\"}\r\n            className={classes.item}\r\n            onClick={goToFunnel}\r\n          >\r\n            <FilterListIcon />\r\n            <div className={classes.info}>\r\n              <Typography className={classes.info}>Funil</Typography>\r\n            </div>\r\n          </Link>\r\n          <Link\r\n            type=\"div\"\r\n            to={\"./list\"}\r\n            className={classes.item}\r\n            onClick={goToList}\r\n          >\r\n            <DashboardIcon />\r\n            <div className={classes.info}>\r\n              <Typography className={classes.info}>Lista</Typography>\r\n            </div>\r\n          </Link>\r\n          <Link type=\"div\" to={\"./\"} className={classes.item} onClick={goToMap}>\r\n            <MapIcon />\r\n            <div className={classes.info}>\r\n              <Typography className={classes.info}>Mapa</Typography>\r\n            </div>\r\n          </Link>\r\n          <Link\r\n            type=\"div\"\r\n            to={\"./roteiro\"}\r\n            className={classes.item}\r\n            onClick={goToScript}\r\n          >\r\n            <DirectionsWalkIcon />\r\n            <div className={classes.info}>\r\n              <Typography className={classes.info}>Roteiro</Typography>\r\n            </div>\r\n          </Link>\r\n          <div className={classes.item}>\r\n            <MoreIcon />\r\n            <div className={classes.info}>\r\n              <Typography className={classes.info}>Mais</Typography>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default memo(BottomAppBar)","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\bottomAppBar\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\infoClientPin\\index.js",[],["267","268"],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\infoClientPin\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\pinFilterBar\\index.js",["269","270","271"],"import React, { useEffect, useState } from \"react\";\r\nimport { useClienteData } from \"../../store/Clients\";\r\nimport NotListedLocationIcon from \"@material-ui/icons/NotListedLocation\";\r\nimport PersonPinCircleIcon from \"@material-ui/icons/PersonPinCircle\";\r\nimport AddLocationIcon from \"@material-ui/icons/AddLocation\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction PinFilterBar() {\r\n  const {\r\n    clientsData,\r\n    leadsData,\r\n    screen,\r\n    dispatchScreen,\r\n    localization,\r\n    setLocalization,\r\n    walkScriptData\r\n  } = useClienteData();\r\n  const [activeLeads, setActiveLeads] = useState(0);\r\n  const classes = useStyles();\r\n  let numberLeads = leadsData.filter(e => e.client_id === \"\" )\r\n  \r\n  const newLead = () => {\r\n    dispatchScreen({\r\n      type: \"PUSH_ADDRESS\",\r\n      payload: \"\",\r\n    });\r\n\r\n    dispatchScreen({\r\n      type: \"ACTIVE_CLICK_ON\",\r\n      payload: true,\r\n    });\r\n    setLocalization({ ...localization, zoom: 17 });\r\n  };\r\n\r\n  const filterScript = () => {\r\n     dispatchScreen({\r\n      type: \"ACTIVE_FILTER_PIN_SCRIPT\",\r\n      payload: screen.filter.script ? false : true,\r\n    });\r\n    dispatchScreen({\r\n      type: \"ACTIVE_FILTER_PIN_CLIENT\",\r\n      payload: false,\r\n    });\r\n    dispatchScreen({\r\n      type: \"ACTIVE_FILTER_PIN_LEAD\",\r\n      payload: false,\r\n    });\r\n  }\r\n\r\n  const filterLeads = () => {\r\n    dispatchScreen({\r\n      type: \"ACTIVE_FILTER_PIN_LEAD\",\r\n      payload: screen.filter.leads ? false : true,\r\n    });\r\n\r\n    dispatchScreen({\r\n      type: \"ACTIVE_FILTER_PIN_SCRIPT\",\r\n      payload: false\r\n    });\r\n  };\r\n\r\n  const filterClients = () => {\r\n    dispatchScreen({\r\n      type: \"ACTIVE_FILTER_PIN_CLIENT\",\r\n      payload: screen.filter.clients ? false : true,\r\n    });\r\n    dispatchScreen({\r\n      type: \"ACTIVE_FILTER_PIN_SCRIPT\",\r\n      payload: false\r\n    });\r\n    \r\n  };\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <div className={classes.grow}>\r\n        <AppBar position=\"static\" className={classes.bar} color=\"none\">\r\n          <div className={classes.itens}>\r\n            <div className={classes.item} onClick={newLead}>\r\n              <Badge badgeContent={0} color=\"secondary\">\r\n                <AddLocationIcon style={{ color: \"#757575\" }} />\r\n              </Badge>\r\n              <div className={classes.info}>\r\n                <Typography className={classes.info}>Novo Lead</Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.item} onClick={filterScript}>\r\n              <Badge badgeContent={walkScriptData[0].allScript.length} color=\"secondary\">\r\n                <DirectionsWalkIcon style={{ color: \"#013a83\" }} />\r\n              </Badge>\r\n              <div className={classes.info}>\r\n                <Typography className={classes.info}>Roteiro</Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.item} onClick={filterLeads}>\r\n              <Badge badgeContent={numberLeads.length} color=\"secondary\">\r\n                <NotListedLocationIcon style={{ color: \"#c66b2f\" }} />\r\n              </Badge>\r\n              <div className={classes.info}>\r\n                <Typography className={classes.info}>Leads</Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.item} onClick={filterClients}>\r\n              <Badge badgeContent={clientsData.length} color=\"secondary\">\r\n                <PersonPinCircleIcon style={{ color: \"#38bc72\" }} />\r\n              </Badge>\r\n              <div className={classes.info}>\r\n                <Typography className={classes.info}>Clientes</Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </AppBar>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PinFilterBar;\r\n","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\pinFilterBar\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\clientInfo\\index.js",["272","273"],"import React, { useState, memo } from \"react\";\r\nimport { useClienteData } from \"../../store/Clients\";\r\nimport EditClient from \"./editClient\";\r\nimport Alert from \"../alert\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport SentimentSatisfiedAltIcon from \"@material-ui/icons/SentimentSatisfiedAlt\";\r\nimport SentimentSatisfiedIcon from \"@material-ui/icons/SentimentSatisfied\";\r\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction ClientInfo({ client }) {\r\n  const {\r\n    localization,\r\n    setLocalization,\r\n    dispatchScreen,\r\n    screen,\r\n  } = useClienteData();\r\n  const [editClient, setEditClient] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const verifyCancel = () => {\r\n    editClient && setEditClient(false);\r\n  };\r\n\r\n  let satisfaction = {\r\n    emote: null,\r\n    border: null,\r\n  };\r\n  if (client.satisfaction < 50) {\r\n    satisfaction.emote = (\r\n      <SentimentVeryDissatisfiedIcon className={classes.icons} />\r\n    );\r\n  } else if (client.satisfaction >= 50 && client.satisfaction < 8) {\r\n    satisfaction.emote = <SentimentSatisfiedIcon className={classes.icons} />;\r\n  } else if (client.satisfaction >= 80) {\r\n    satisfaction.emote = (\r\n      <SentimentSatisfiedAltIcon className={classes.icons} />\r\n    );\r\n  }\r\n\r\n  const goToCordenates = () => {\r\n    setLocalization({\r\n      ...localization,\r\n      lat: client.address.lat,\r\n      lng: client.address.lng,\r\n      zoom: 20,\r\n    });\r\n    dispatchScreen({\r\n      type: \"ACTIVE_FILTER_PIN_CLIENT\",\r\n      payload: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!editClient ? (\r\n        <div className={classes.main}>\r\n          <Card className={classes.root}>\r\n            <div className={classes.head}>\r\n              <Typography className={classes.title}>\r\n                {client.commercial_name}\r\n              </Typography>\r\n              <Link to={\"./\"}>\r\n                <Fab className={classes.pin} onClick={goToCordenates}>\r\n                  <RoomIcon />\r\n                </Fab>\r\n              </Link>\r\n            </div>\r\n            <div className={classes.firstComponent}>\r\n              <Typography className={classes.pos}>\r\n                <strong>({client.business_type})</strong>\r\n                <br />\r\n                {client.address && client.address.street}\r\n              </Typography>\r\n              <Typography className={classes.status}>\r\n                <CalendarTodayIcon className={classes.icons} />\r\n                <strong>Ultima visita</strong>\r\n                <br />\r\n                {client.last_visit && client.last_visit}\r\n              </Typography>\r\n\r\n              <Typography className={classes.status}>\r\n                <>\r\n                  <CalendarTodayIcon className={classes.icons} />\r\n                  <strong>Visita hoje</strong>\r\n                  <br />\r\n                  {client.visit_today ? \"Sim\" : \"Não\"}\r\n                </>\r\n              </Typography>\r\n            </div>\r\n            <div className={classes.secondComponent}>\r\n              <Typography className={classes.status}>\r\n                {satisfaction.emote}\r\n                <strong>Satisfação</strong>\r\n                <br />\r\n                {client.satisfaction !== 0 ? `${client.satisfaction}%` : \"-\"}\r\n              </Typography>\r\n              <Typography className={classes.status}>\r\n                <AttachMoneyIcon className={classes.icons} />\r\n                <strong>Migração</strong>\r\n                <br />\r\n                {client.percentage_migration}%\r\n              </Typography>\r\n              <Typography className={classes.status}>\r\n                <TrendingUpIcon className={classes.icons} />\r\n                <strong>TPV</strong>\r\n                <br />\r\n                {client.tpv}\r\n              </Typography>\r\n            </div>\r\n            <Fab\r\n              className={classes.edit}\r\n              variant=\"extended\"\r\n              onClick={() => {\r\n                setEditClient(true);\r\n              }}\r\n            >\r\n              Editar\r\n            </Fab>\r\n          </Card>\r\n        </div>\r\n      ) : (\r\n        <EditClient info={client} back={verifyCancel} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(ClientInfo);\r\n","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\clientInfo\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\map\\index.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\store\\Clients.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\pages\\list\\index.js",["274","275"],"import React from \"react\";\r\nimport { useClienteData } from \"../../store/Clients\";\r\nimport SelectCostumer from \"../../components/selectCostumer\";\r\nimport ClientInfo from \"../../components/clientInfo\";\r\nimport LeadInfo from \"../../components/leadinfo\";\r\nimport SearchBar from \"../../components/searchBar\";\r\nimport BottomAppBar from \"../../components/bottomAppBar\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction List() {\r\n  const classes = useStyles();\r\n  const { clientsData, leadsData, screen } = useClienteData();\r\n  let search = screen.searchBar.list.value;\r\n\r\n  const clientRender = () => {\r\n    const render = !search\r\n      ? clientsData.map((client, index) => (\r\n          <ClientInfo key={client.id} client={client} />\r\n        ))\r\n      : clientsData\r\n          .filter((client) => {\r\n            if (\r\n              client.commercial_name\r\n                .toLowerCase()\r\n                .includes(search.toLowerCase())\r\n            ) {\r\n              return client;\r\n            }\r\n          })\r\n          .map((client, key) => {\r\n            return <ClientInfo key={client.id} client={client} />;\r\n          });\r\n    return render;\r\n  };\r\n\r\n  const leadRender = () => {\r\n    const render = !search\r\n      ? leadsData.map((client, index) => (\r\n          <LeadInfo key={client.id} client={client} />\r\n        ))\r\n      : leadsData\r\n          .filter((client) => {\r\n            if (\r\n              client.commercial_name\r\n                .toLowerCase()\r\n                .includes(search.toLowerCase())\r\n            ) {\r\n              return client;\r\n            }\r\n          })\r\n          .map((client, key) => {\r\n            return <LeadInfo key={client.id} client={client} />;\r\n          });\r\n    return render;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar />\r\n      <SelectCostumer client={clientRender} lead={leadRender} />\r\n      <div className={classes.topSpace} />\r\n      <BottomAppBar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\config\\history.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\pages\\home\\index.js",["276"],"import React, { useState }  from 'react'\r\nimport Alert from '../../components/alert'\r\nimport SearchBar from '../../components/searchBar'\r\nimport BottomAppBar from '../../components/bottomAppBar'\r\nimport PintFilterBar from '../../components/pinFilterBar'\r\nimport NewLead from '../../components/newLead'\r\nimport Map from '../../components/map'\r\nimport Modal from '../../components/modal'\r\nimport Filter from '../../components/filter'\r\nimport { useClienteData} from '../../store/Clients'\r\n\r\nfunction Home() {\r\n  const { screen } = useClienteData();\r\n\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar/>\r\n      <Map/>\r\n      {screen.alert.status && <Alert/>}\r\n      {screen.funnel && <Modal type={'filter'} children={<Filter/>}/>}\r\n      {screen.newLead.screen && <Modal type={'newLead'} children={<NewLead/> }/>} \r\n      {!screen.newLead.clickOn && <PintFilterBar/>}\r\n      <BottomAppBar/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\config\\Routes.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\config\\routes.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\pages\\notFound\\index.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\pin\\index.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\pin\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\modal\\index.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\modal\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\filter\\index.js",["277","278","279"],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\filter\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\filter\\input\\index.js",["280"],"import React, { useState, useEffect } from \"react\";\r\nimport { useClienteData } from \"../../../store/Clients\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport StorefrontIcon from \"@material-ui/icons/Storefront\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction Input({ type }) {\r\n  let input = [];\r\n  const classes = useStyles();\r\n  const { clientsData, leadsData, filter, setFilter } = useClienteData();\r\n  const [open, setOpen] = useState(false);\r\n  const [establishment, setestablishment] = useState([]);\r\n  const [age, setAge] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    let value = event.target.value;\r\n    if (type === \"leads\") setFilter({ ...filter, lead: value });\r\n    if (type === \"segmento\") setFilter({ ...filter, establishment: value });\r\n    if (type === \"tpv\") setFilter({ ...filter, tpv: value });\r\n  };\r\n\r\n  const filterEstablishment = () => {\r\n    let clientsEstablishments = clientsData.map((est) => {\r\n      return est.business_type;\r\n    });\r\n    let leadsEstablishments = leadsData.map((est) => {\r\n      return est.business_type;\r\n    });\r\n    const allEstablishments = [\r\n      ...clientsEstablishments,\r\n      ...leadsEstablishments,\r\n    ];\r\n    const filtredEstablishments = allEstablishments.filter(\r\n      (es, i) => allEstablishments.indexOf(es) === i\r\n    );\r\n    setestablishment(filtredEstablishments);\r\n    console.log(filtredEstablishments);\r\n  };\r\n\r\n  useEffect(() => {\r\n    type === \"segmento\" && filterEstablishment();\r\n  }, [clientsData, leadsData]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  if (type === \"leads\") input = [\"Com proposta\", \"Sem proposta\"];\r\n  if (type === \"segmento\") input = establishment;\r\n  if (type === \"tpv\") input = [\"<10k\", \"10-20k\", \">20k\"];\r\n\r\n  return (\r\n    <ListItem button className={classes.main}>\r\n      <ListItemIcon>\r\n        {type === \"leads\" && <HelpIcon />}\r\n        {type === \"segmento\" && <StorefrontIcon />}\r\n        {type === \"tpv\" && <TrendingUpIcon />}\r\n      </ListItemIcon>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-controlled-open-select-label\">{type}</InputLabel>\r\n        <Select\r\n          labelId=\"demo-controlled-open-select-label\"\r\n          id=\"demo-controlled-open-select\"\r\n          open={open}\r\n          onClose={handleClose}\r\n          onOpen={handleOpen}\r\n          value={age}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {input.map((item) => (\r\n            <MenuItem key={item} value={item}>\r\n              {item}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n",["281","282"],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\filter\\input\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\pages\\list\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\leadinfo\\index.js",["283","284"],"import React, { useState, memo } from \"react\";\r\nimport { useClienteData } from \"../../store/Clients\";\r\nimport EditLead from \"./editLead\";\r\nimport Alert from \"../alert\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction LeadInfo({ client }) {\r\n  const classes = useStyles();\r\n  const {\r\n    localization,\r\n    setLocalization,\r\n    dispatchScreen,\r\n    screen,\r\n    dispatchLead,\r\n  } = useClienteData();\r\n  const [editLead, setEditLead] = useState(false);\r\n\r\n  const verifyCancel = () => {\r\n    editLead && setEditLead(false);\r\n  };\r\n\r\n  const goToCordenates = () => {\r\n    setLocalization({\r\n      ...localization,\r\n      lat: client.address.lat,\r\n      lng: client.address.lng,\r\n      zoom: 20,\r\n    });\r\n    dispatchScreen({\r\n      type: \"ACTIVE_FILTER_PIN_LEAD\",\r\n      payload: true,\r\n    });\r\n  };\r\n\r\n  const sendPoposal = async (type) => {\r\n    const newLeadAdd = await fetch(`http://localhost:3001/leads/${client.id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ send_proposal: type }),\r\n    });\r\n    if (newLeadAdd.ok) {\r\n      const responseLeads = await fetch(\"http://localhost:3001/leads\");\r\n      const dataLead = await responseLeads.json();\r\n      dispatchLead({ type: \"ADD_LEAD\", payload: dataLead });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {client.client_id === \"\" ? (\r\n        !editLead ? (\r\n          <div className={classes.main}>\r\n            <Card className={classes.root}>\r\n              <div className={classes.head}>\r\n                <Typography className={classes.title}>\r\n                  {client.commercial_name}\r\n                </Typography>\r\n                <Link to={\"./\"}>\r\n                  <Fab className={classes.pin} onClick={goToCordenates}>\r\n                    <RoomIcon />\r\n                  </Fab>\r\n                </Link>\r\n              </div>\r\n              <div className={classes.firstComponent}>\r\n                <Typography className={classes.pos}>\r\n                  <strong>({client.business_type})</strong>\r\n                  <br />\r\n                  {client.address && client.address.street}\r\n                </Typography>\r\n                <Typography className={classes.status}>\r\n                  <CachedIcon className={classes.icons} />\r\n                  <strong>Status da negociação</strong>\r\n                  <br />\r\n                  {client.negotiation_status ? client.negotiation_status : \"-\"}\r\n                </Typography>\r\n                <Typography className={classes.status}>\r\n                  <CalendarTodayIcon className={classes.icons} />\r\n                  <strong>Ultima visita</strong>\r\n                  <br />\r\n                  {client.last_visit ? client.last_visit : \"-\"}\r\n                </Typography>\r\n                <Typography className={classes.status}>\r\n                  <>\r\n                    <CalendarTodayIcon className={classes.icons} />\r\n                    <strong>Visita hoje</strong>\r\n                    <br />\r\n                    {client.visit_today ? \"Sim\" : \"Não\"}\r\n                  </>\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.secondComponent}>\r\n                <Typography className={classes.status}>\r\n                  <TrendingUpIcon className={classes.icons} />\r\n                  <strong>TPV</strong>\r\n                  <br />\r\n                  {client.tpv ? client.tpv : \"-\"}\r\n                </Typography>\r\n                <Typography className={classes.status}>\r\n                  <strong>Qtd. visitas</strong>\r\n                  <br />\r\n                  {client.visit_numbers ? client.visit_numbers : \"-\"}\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.buttons}>\r\n                <Fab\r\n                  className={classes.delet}\r\n                  variant=\"extended\"\r\n                  onClick={() => setEditLead(true)}\r\n                >\r\n                  Editar\r\n                </Fab>\r\n                {!client.send_proposal ? (\r\n                  <Fab\r\n                    className={classes.newTask}\r\n                    variant=\"extended\"\r\n                    onClick={() => {\r\n                      sendPoposal(true);\r\n                    }}\r\n                  >\r\n                    Enviar Proposta\r\n                  </Fab>\r\n                ) : (\r\n                  <>\r\n                    <Fab\r\n                      className={classes.cancelTask}\r\n                      variant=\"extended\"\r\n                      onClick={() => {\r\n                        sendPoposal(false);\r\n                      }}\r\n                    >\r\n                      Retirar Proposta\r\n                    </Fab>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        ) : (\r\n          <EditLead info={client} back={verifyCancel} />\r\n        )\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(LeadInfo);\r\n","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\leadinfo\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\cardInfo\\index.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\selectCostumer\\index.js",["285"],"import React, { useEffect, useState } from \"react\";\r\nimport { useClienteData } from \"../../store/Clients\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Alert from \"../alert\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`action-tabpanel-${index}`}\r\n      aria-labelledby={`action-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `action-tab-${index}`,\r\n    \"aria-controls\": `action-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction SelectCostumer({ client, lead }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n  const { screen } = useClienteData();\r\n  let location = useLocation();\r\n  \r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setValue(1);\r\n  }, []);\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div position=\"static\" color=\"default\" className={classes.appBar}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          aria-label=\"action tabs example\"\r\n        >\r\n          <Tab label=\"Leads\" {...a11yProps(0)} className={classes.tab} />\r\n          <Tab label=\"Clientes\" {...a11yProps(1)} className={classes.tab} />\r\n        </Tabs>\r\n      </div>\r\n      {screen.alert.status && <Alert/>}\r\n      <SwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        \r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          {lead}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          {client}\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectCostumer;\r\n","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\selectCostumer\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\pages\\script\\index.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\walkScript\\index.js",["286","287","288","289"],"import React, { useState, useEffect } from \"react\";\r\nimport { useClienteData } from \"../../store/Clients\";\r\nimport { useStyles } from \"./styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DirectionsWalkIcon from \"@material-ui/icons/DirectionsWalk\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\n\r\nexport default function SelectCostumer() {\r\n  const classes = useStyles();\r\n  const {\r\n    clientsData,\r\n    leadsData,\r\n    screen,\r\n    dispatchScreen,\r\n    walkScriptData,\r\n    setWalScript,\r\n  } = useClienteData();\r\n  const leadList = leadsData.filter((cliente) => cliente.client_id === \"\");\r\n  const [listLeads, setListLeads] = useState(leadsData.filter((cliente) => cliente.client_id === \"\"))\r\n  const [outList, setOutList] = useState([]);\r\n  const [IntList, setInList] = useState(walkScriptData[0].allScript);\r\n  const [menu, setMenu] = useState({ clients: true, list: false });\r\n  let search = screen.searchBar.script.value;\r\n\r\n  useEffect(() => {\r\n    setInList(walkScriptData[0].allScript);\r\n\r\n    setOutList([...leadList, ...clientsData]);\r\n    console.log(outList)\r\n  }, [walkScriptData, clientsData, leadsData]);\r\n\r\n  const mainMenu = (type) => {\r\n    if (type === \"clients\") setMenu({ clients: true, list: false });\r\n    if (type === \"list\") setMenu({ clients: false, list: true });\r\n  };\r\n\r\n  const removeOutList = (e) => {\r\n    setInList([...IntList, e]);\r\n    let idClient = e.id;\r\n    setOutList(outList.filter((e) => e.id !== idClient));\r\n    console.log(IntList);\r\n  };\r\n\r\n  const removeIntList = (e) => {\r\n    setOutList([...outList, e]);\r\n    let idClient = e.id;\r\n    setInList(IntList.filter((e) => e.id !== idClient));\r\n    console.log(IntList);\r\n  };\r\n\r\n  \r\n\r\n  const newScript = async () => {\r\n    const newScript = await fetch(\"http://localhost:3001/script/scripts\", {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Headers\":\r\n          \"Origin, X-Requested-With, Content-Type, Accept\",\r\n        \"Access-Control-Allow-Methods\": \"PATCH\",\r\n        mode: \"cors\",\r\n      },\r\n      body: JSON.stringify({ allScript: IntList }),\r\n    });\r\n    if (newScript.ok) {\r\n      const responseScript = await fetch(\"http://localhost:3001/script\");\r\n      const dataScript = await responseScript.json();\r\n      setWalScript(dataScript);\r\n      dispatchScreen({\r\n        type: \"ACTIVE_ALERT_SAVE\",\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveScript = () => {\r\n    newScript();\r\n  };\r\n\r\n  const renderList = (type) => {\r\n    let render = !search\r\n      ? type.map(\r\n          (client) =>\r\n            client.commercial_name !== \"\" && renderContent(client, type)\r\n        )\r\n      : type\r\n          .filter((client) => {\r\n            if (\r\n              client.commercial_name\r\n                .toLowerCase()\r\n                .includes(search.toLowerCase())\r\n            ) {\r\n              return client;\r\n            }\r\n          })\r\n          .map((client, key) => {\r\n            return renderContent(client, type);\r\n          });\r\n    return render;\r\n  };\r\n\r\n  const renderContent = (client, type) => {\r\n    return (\r\n      <>\r\n        <Paper key={client.id} elevation={1} className={classes.card}>\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <StoreIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={client.commercial_name}\r\n              secondary={client.address.street}\r\n            />\r\n            {type === outList ? (\r\n              <Button\r\n                onClick={() => {\r\n                  removeOutList(client);\r\n                }}\r\n                size=\"small\"\r\n                className={classes.buttonAdd}\r\n              >\r\n                ADD\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                onClick={() => {\r\n                  removeIntList(client);\r\n                }}\r\n                size=\"small\"\r\n                className={classes.buttonRemove}\r\n              >\r\n                Remover\r\n              </Button>\r\n            )}\r\n          </ListItem>\r\n        </Paper>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.buttons}>\r\n        <Button\r\n          size=\"large\"\r\n          style={{ marginRight: 20 }}\r\n          className={classes.selectButton}\r\n          startIcon={<ListIcon />}\r\n          onClick={() => {\r\n            mainMenu(\"clients\");\r\n          }}\r\n        >\r\n          Todos\r\n        </Button>\r\n        <Divider orientation=\"vertical\" flexItem />\r\n        <Button\r\n          size=\"large\"\r\n          style={{ marginLeft: 20 }}\r\n          className={classes.selectButton}\r\n          startIcon={<DirectionsWalkIcon />}\r\n          onClick={() => {\r\n            mainMenu(\"list\");\r\n          }}\r\n        >\r\n          Roteiro\r\n        </Button>\r\n      </div>\r\n      {menu.clients && (\r\n        <div className={classes.main}>\r\n          <List className={classes.root}>{renderList(outList)}</List>\r\n        </div>\r\n      )}\r\n      {menu.list && (\r\n        <div className={classes.main}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"none\"\r\n            size=\"large\"\r\n            className={classes.buttonSave}\r\n            startIcon={<SaveIcon />}\r\n            onClick={() => {\r\n              saveScript();\r\n            }}\r\n          >\r\n            Salvar Roteiro\r\n          </Button>\r\n          <List className={classes.root}>{renderList(IntList)}</List>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\walkScript\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\newLead\\index.js",["290"],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\newLead\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\map\\polynes.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\store\\reducers\\screenReducer.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\store\\reducers\\clientReducer.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\store\\initialState.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\pages\\home\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\store\\reducers\\leadReducer.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\newLead\\formik.js",["291","292"],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\alert\\index.js",["293"],"import React, { useState } from \"react\";\r\nimport { useClienteData } from \"../../store/Clients\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nexport default function Alert() {\r\n  const { dispatchScreen, screen } = useClienteData();\r\n\r\n  const handleClose = () => {\r\n    dispatchScreen({\r\n      type: \"ACTIVE_ALERT_SIGNUP\",\r\n      payload: false,\r\n    });\r\n    dispatchScreen({\r\n      type: \"ACTIVE_ALERT_EDIT\",\r\n      payload: false,\r\n    });\r\n    dispatchScreen({\r\n      type: \"ACTIVE_ALERT_DELET\",\r\n      payload: false,\r\n    });\r\n    dispatchScreen({\r\n      type: \"ACTIVE_ALERT_SAVE\",\r\n      payload: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      color=\"primary\"\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n      }}\r\n      open={true}\r\n      autoHideDuration={3000}\r\n      onClose={handleClose}\r\n      message={\r\n        (screen.alert.signup && \"Cadastro Feito com sucesso!\") ||\r\n        (screen.alert.edit && \"Alterado com sucesso!\") ||\r\n        (screen.alert.delet && \"Excluido com sucesso!\") ||\r\n        (screen.alert.script && \"Roteiro salvo com sucesso!\")\r\n      }\r\n      action={\r\n        <React.Fragment>\r\n          <IconButton\r\n            size=\"small\"\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n          >\r\n            <CloseIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </React.Fragment>\r\n      }\r\n    />\r\n  );\r\n}\r\n","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\services\\api.js",["294"],"export const pushNewLead = async (value) => {\r\n  const newLeadAdd = await fetch('http://localhost:3001/leads', {\r\n    method: 'post',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(value)\r\n  })\r\n}","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\leadinfo\\editLead\\index.js",["295","296"],"import React, { useState } from \"react\";\r\nimport { useClienteData } from \"../../../store/Clients\";\r\nimport useFormik from \"./formik\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport SwapHorizontalCircleIcon from \"@material-ui/icons/SwapHorizontalCircle\";\r\nimport StorefrontIcon from \"@material-ui/icons/Storefront\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction EditLead({ info, back }) {\r\n  const classes = useStyles();\r\n  const { dispatchScreen, dispatchLead, dispatch, screen } = useClienteData();\r\n  const [errorSignup, setErrorSignup] = useState(false);\r\n  const [confirmDelet, setconfirmDelet] = useState(false);\r\n  const [convert, setConvert] = useState(false);\r\n\r\n  const closeNewLead = () => {\r\n    dispatchScreen({\r\n      type: \"ADD_NEW_PIN\",\r\n      payload: false,\r\n    });\r\n  };\r\n\r\n  let CONVERT_LEAD_INITIAL = {\r\n    commercial_name: info.commercial_name,\r\n    business_type: info.business_type,\r\n    tpv: info.tpv,\r\n    address: info.address,\r\n    satisfaction: 0,\r\n    last_visit: info.last_visit,\r\n    visit_today: info.visit_today,\r\n    percentage_migration: 0,\r\n  };\r\n\r\n  const reloadLeads = async () => {\r\n    const responseLeads = await fetch(\"http://localhost:3001/leads\");\r\n    const dataLead = await responseLeads.json();\r\n    dispatchLead({ type: \"ADD_LEAD\", payload: dataLead });\r\n  };\r\n\r\n  const reloadClients = async () => {\r\n    const responseClients = await fetch(\"http://localhost:3001/clients\");\r\n    const dataClient = await responseClients.json();\r\n    dispatch({ type: \"ADD_CLIENT\", payload: dataClient });\r\n  };\r\n\r\n  const editLead = async (value) => {\r\n    const newLeadAdd = await fetch(`http://localhost:3001/leads/${info.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(value),\r\n    });\r\n    if (newLeadAdd.ok) {\r\n      closeNewLead();\r\n      reloadLeads();\r\n    }\r\n  };\r\n\r\n  const deletLead = async () => {\r\n    const newLeadAdd = await fetch(`http://localhost:3001/leads/${info.id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Headers\":\r\n          \"Origin, X-Requested-With, Content-Type, Accept\",\r\n        \"Access-Control-Allow-Methods\": \"DELETE\",\r\n        mode: \"cors\",\r\n      },\r\n    });\r\n    if (newLeadAdd.ok) {\r\n      dispatchScreen({ type: \"ACTIVE_ALERT_DELET\", payload: true });\r\n      closeNewLead();\r\n      reloadLeads();\r\n    }\r\n  };\r\n\r\n  const addClientIdToLead = async (clientId) => {\r\n    const newClient = await fetch(`http://localhost:3001/leads/${info.id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ client_id: clientId }),\r\n    });\r\n    if (newClient.ok) {\r\n      reloadLeads();\r\n      reloadClients();\r\n      dispatchScreen({ type: \"ACTIVE_ALERT_EDIT\", payload: true });\r\n    }\r\n  };\r\n\r\n  const convertLeadToClient = async () => {\r\n    setConvert(true);\r\n    const newClient = await fetch(\"http://localhost:3001/clients\", {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(CONVERT_LEAD_INITIAL),\r\n    });\r\n    if (newClient.ok) {\r\n      const newClientResponse = await newClient.json();\r\n      addClientIdToLead(newClientResponse.id);\r\n      closeNewLead();\r\n      reloadClients();\r\n      reloadLeads();\r\n      dispatchScreen({\r\n        type: \"ACTIVE_FILTER_PIN_CLIENT\",\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: info,\r\n    validate: function (values) {\r\n      const errors = {};\r\n\r\n      if (\r\n        values.commercial_name.length < 5 ||\r\n        values.commercial_name.length > 20\r\n      ) {\r\n        errors.commercial_name = \"Nome deve ter entre 5 a 20 caracteres\";\r\n      }\r\n\r\n      if (values.business_type.length < 2 || values.business_type.length > 15) {\r\n        errors.business_type = \"Segmento deve ter entre 2 a 15 caracteres\";\r\n      }\r\n\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  const onSubmitForm = () => {\r\n    if (Object.keys(formik.errors).length === 0) {\r\n      setErrorSignup(false);\r\n      editLead(formik.values);\r\n      dispatchScreen({\r\n        type: \"ACTIVE_ALERT_EDIT\",\r\n        payload: true,\r\n      });\r\n    } else {\r\n      setErrorSignup(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!confirmDelet ? (\r\n        <div className={classes.main}>\r\n          <Card className={classes.root}>\r\n            <form\r\n              onSubmit={(event) => {\r\n                event.preventDefault();\r\n                onSubmitForm();\r\n              }}\r\n            >\r\n              <div className={classes.firstComponent}>\r\n                <div className={classes.head}>\r\n                  <Typography className={classes.title}>\r\n                    Editar {info.commercial_name}\r\n                  </Typography>\r\n                </div>\r\n                {errorSignup && (\r\n                  <Typography className={classes.error}>\r\n                    Verifique os campos abaixo\r\n                  </Typography>\r\n                )}\r\n                <TextField\r\n                  error={\r\n                    formik.touched.commercial_name &&\r\n                    formik.errors.commercial_name &&\r\n                    true\r\n                  }\r\n                  placeholder=\"Nome comercial\"\r\n                  name=\"commercial_name\"\r\n                  id=\"commercial_name\"\r\n                  onBlur={formik.handleBlur}\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.commercial_name}\r\n                  helperText={\r\n                    formik.touched.commercial_name &&\r\n                    formik.errors.commercial_name\r\n                      ? formik.errors.commercial_name\r\n                      : \"Nome do estabelecimento\"\r\n                  }\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <StoreIcon className={classes.icons} />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n\r\n                <TextField\r\n                  error={\r\n                    formik.touched.business_type &&\r\n                    formik.errors.business_type &&\r\n                    true\r\n                  }\r\n                  placeholder=\"Segmento\"\r\n                  name=\"business_type\"\r\n                  value={formik.values.business_type}\r\n                  id=\"business_type\"\r\n                  onBlur={formik.handleBlur}\r\n                  onChange={formik.handleChange}\r\n                  helperText={\r\n                    formik.touched.business_type && formik.errors.business_type\r\n                      ? formik.errors.business_type\r\n                      : \"Ex: Borracharia\"\r\n                  }\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <StorefrontIcon className={classes.icons} />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n                <TextField\r\n                  placeholder=\"TPV Potencial\"\r\n                  type=\"number\"\r\n                  name=\"tpv\"\r\n                  onChange={formik.handleChange}\r\n                  id=\"tpv\"\r\n                  value={formik.values.tpv}\r\n                  helperText=\"transações no cartão p/ mês\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <TrendingUpIcon className={classes.icons} />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n                <TextField\r\n                  placeholder=\"Status da Negociação\"\r\n                  name=\"negotiation_status\"\r\n                  onChange={formik.handleChange}\r\n                  id=\"negotiation_status\"\r\n                  value={formik.values.negotiation_status}\r\n                  helperText=\"Ex: fria, quente, obs...\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <CachedIcon className={classes.icons} />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n                <br />\r\n                <Checkbox\r\n                  checked={formik.values.visit_today ? true : false}\r\n                  color=\"default\"\r\n                  name=\"visit_today\"\r\n                  onChange={formik.handleChange}\r\n                  inputProps={{ \"aria-label\": \"checkbox with default color\" }}\r\n                />\r\n                <strong>Visitar hoje</strong>\r\n              </div>\r\n              <div className={classes.buttons}>\r\n                <Fab className={classes.back} variant=\"extended\" onClick={back}>\r\n                  voltar\r\n                </Fab>\r\n                <Fab\r\n                  className={classes.edit}\r\n                  variant=\"extended\"\r\n                  type=\"submit\"\r\n                  name=\"id\"\r\n                  onSubmit={formik.handleChange}\r\n                >\r\n                  Aplicar\r\n                </Fab>\r\n              </div>\r\n              <Typography\r\n                className={classes.aprove}\r\n                variant=\"extended\"\r\n                name=\"id\"\r\n                onClick={() => convertLeadToClient()}\r\n              >\r\n                <SwapHorizontalCircleIcon className={classes.aproveIcon} />\r\n                Converter Lead para Cliente\r\n              </Typography>\r\n              <Typography\r\n                className={classes.delet}\r\n                variant=\"extended\"\r\n                name=\"id\"\r\n                onClick={() => setconfirmDelet(true)}\r\n              >\r\n                <DeleteForeverIcon className={classes.deletIcon} />\r\n                Excluir Lead\r\n              </Typography>\r\n            </form>\r\n          </Card>\r\n        </div>\r\n      ) : (\r\n        <div className={classes.main}>\r\n          <Card className={classes.root}>\r\n            <Typography className={classes.title}>\r\n              Deseja mesmo excluir:\r\n              <br />\r\n              {info.commercial_name} ?\r\n            </Typography>\r\n            <div className={classes.firstComponent}>\r\n              <div className={classes.buttons}>\r\n                <Fab\r\n                  className={classes.back}\r\n                  variant=\"extended\"\r\n                  onClick={() => setconfirmDelet(false)}\r\n                >\r\n                  NÃO\r\n                </Fab>\r\n                <Fab\r\n                  className={classes.edit}\r\n                  variant=\"extended\"\r\n                  type=\"submit\"\r\n                  name=\"id\"\r\n                  onClick={() => {\r\n                    deletLead();\r\n                  }}\r\n                >\r\n                  SIM\r\n                </Fab>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditLead;\r\n","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\leadinfo\\editLead\\formik.js",["297","298"],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\leadinfo\\editLead\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\clientInfo\\editClient\\index.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\clientInfo\\editClient\\formik.js",["299","300"],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\clientInfo\\editClient\\styles.js",[],"C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\searchBar\\searchAddress\\index.js",["301","302"],"import React from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport { useClienteData } from \"../../../store/Clients\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useStyles } from \"./styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction SearchBarAddress() {\r\n  let location = useLocation();\r\n  const classes = useStyles();\r\n  const { setLocalization } = useClienteData();\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [coordinates, setCoordinates] = React.useState({\r\n    lat: null,\r\n    lng: null,\r\n  });\r\n\r\n  const handleSelect = async (value) => {\r\n    const results = await geocodeByAddress(value);\r\n    const latLng = await getLatLng(results[0]);\r\n    setAddress(value);\r\n    setCoordinates(latLng);\r\n    setLocalization({ lat: latLng.lat, lng: latLng.lng, zoom: 20 });\r\n  };\r\n\r\n  return (\r\n    <PlacesAutocomplete\r\n      value={address}\r\n      onChange={setAddress}\r\n      onSelect={handleSelect}\r\n    >\r\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n        <div>\r\n          <Paper component=\"form\" className={classes.root}>\r\n            <IconButton className={classes.iconButton}>\r\n              <SearchIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              {...getInputProps()}\r\n              className={classes.input}\r\n              placeholder=\"Procurar endereço\"\r\n              inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            />\r\n            <IconButton className={classes.clearIcon}>\r\n              <CloseIcon\r\n                onClick={() => {\r\n                  setAddress(\"\");\r\n                }}\r\n              />\r\n            </IconButton>\r\n          </Paper>\r\n          <div className={classes.suggestionDiv}>\r\n            {loading ? <div>Carregando...</div> : null}\r\n\r\n            {suggestions.map((suggestion) => {\r\n              return (\r\n                <div\r\n                  key={suggestion.description}\r\n                  className={\r\n                    suggestion.active\r\n                      ? classes.suggestionActive\r\n                      : classes.suggestionNormal\r\n                  }\r\n                  {...getSuggestionItemProps(suggestion)}\r\n                >\r\n                  {suggestion.description}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </PlacesAutocomplete>\r\n  );\r\n}\r\n\r\nexport default SearchBarAddress;\r\n","C:\\Users\\Flavio Augusto\\Desktop\\Projetos\\stone-challenge\\src\\components\\searchBar\\searchAddress\\styles.js",[],{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","severity":1,"message":"308","line":4,"column":10,"nodeType":"309","messageId":"310","endLine":4,"endColumn":18},{"ruleId":"307","severity":1,"message":"311","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":20},{"ruleId":"307","severity":1,"message":"312","line":7,"column":8,"nodeType":"309","messageId":"310","endLine":7,"endColumn":17},{"ruleId":"307","severity":1,"message":"313","line":13,"column":8,"nodeType":"309","messageId":"310","endLine":13,"endColumn":15},{"ruleId":"303","replacedBy":"314"},{"ruleId":"305","replacedBy":"315"},{"ruleId":"307","severity":1,"message":"308","line":1,"column":17,"nodeType":"309","messageId":"310","endLine":1,"endColumn":25},{"ruleId":"307","severity":1,"message":"316","line":2,"column":10,"nodeType":"309","messageId":"310","endLine":2,"endColumn":20},{"ruleId":"307","severity":1,"message":"317","line":11,"column":8,"nodeType":"309","messageId":"310","endLine":11,"endColumn":17},{"ruleId":"303","replacedBy":"318"},{"ruleId":"305","replacedBy":"319"},{"ruleId":"307","severity":1,"message":"320","line":1,"column":17,"nodeType":"309","messageId":"310","endLine":1,"endColumn":26},{"ruleId":"307","severity":1,"message":"321","line":22,"column":10,"nodeType":"309","messageId":"310","endLine":22,"endColumn":21},{"ruleId":"307","severity":1,"message":"322","line":22,"column":23,"nodeType":"309","messageId":"310","endLine":22,"endColumn":37},{"ruleId":"307","severity":1,"message":"323","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":13},{"ruleId":"307","severity":1,"message":"324","line":23,"column":5,"nodeType":"309","messageId":"310","endLine":23,"endColumn":11},{"ruleId":"325","severity":1,"message":"326","line":21,"column":28,"nodeType":"327","messageId":"328","endLine":21,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":42,"column":28,"nodeType":"327","messageId":"328","endLine":42,"endColumn":30},{"ruleId":"307","severity":1,"message":"308","line":1,"column":17,"nodeType":"309","messageId":"310","endLine":1,"endColumn":25},{"ruleId":"307","severity":1,"message":"329","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":24},{"ruleId":"307","severity":1,"message":"330","line":11,"column":8,"nodeType":"309","messageId":"310","endLine":11,"endColumn":16},{"ruleId":"307","severity":1,"message":"331","line":27,"column":22,"nodeType":"309","messageId":"310","endLine":27,"endColumn":35},{"ruleId":"332","severity":1,"message":"333","line":50,"column":6,"nodeType":"334","endLine":50,"endColumn":30,"suggestions":"335"},{"ruleId":"303","replacedBy":"336"},{"ruleId":"305","replacedBy":"337"},{"ruleId":"307","severity":1,"message":"323","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":13},{"ruleId":"307","severity":1,"message":"324","line":21,"column":5,"nodeType":"309","messageId":"310","endLine":21,"endColumn":11},{"ruleId":"307","severity":1,"message":"338","line":42,"column":7,"nodeType":"309","messageId":"310","endLine":42,"endColumn":15},{"ruleId":"307","severity":1,"message":"339","line":28,"column":10,"nodeType":"309","messageId":"310","endLine":28,"endColumn":19},{"ruleId":"307","severity":1,"message":"340","line":28,"column":21,"nodeType":"309","messageId":"310","endLine":28,"endColumn":33},{"ruleId":"332","severity":1,"message":"341","line":39,"column":6,"nodeType":"334","endLine":39,"endColumn":46,"suggestions":"342"},{"ruleId":"325","severity":1,"message":"326","line":98,"column":28,"nodeType":"327","messageId":"328","endLine":98,"endColumn":30},{"ruleId":"307","severity":1,"message":"343","line":3,"column":10,"nodeType":"309","messageId":"310","endLine":3,"endColumn":21},{"ruleId":"307","severity":1,"message":"344","line":1,"column":8,"nodeType":"309","messageId":"310","endLine":1,"endColumn":13},{"ruleId":"332","severity":1,"message":"345","line":10,"column":6,"nodeType":"334","endLine":10,"endColumn":14,"suggestions":"346"},{"ruleId":"307","severity":1,"message":"308","line":1,"column":17,"nodeType":"309","messageId":"310","endLine":1,"endColumn":25},{"ruleId":"307","severity":1,"message":"347","line":2,"column":9,"nodeType":"309","messageId":"310","endLine":2,"endColumn":19},{"ruleId":"307","severity":1,"message":"324","line":20,"column":51,"nodeType":"309","messageId":"310","endLine":20,"endColumn":57},{"ruleId":"307","severity":1,"message":"348","line":23,"column":10,"nodeType":"309","messageId":"310","endLine":23,"endColumn":17},{"ruleId":"307","severity":1,"message":"344","line":1,"column":8,"nodeType":"309","messageId":"310","endLine":1,"endColumn":13},{"ruleId":"332","severity":1,"message":"345","line":10,"column":6,"nodeType":"334","endLine":10,"endColumn":14,"suggestions":"349"},{"ruleId":"307","severity":1,"message":"344","line":1,"column":8,"nodeType":"309","messageId":"310","endLine":1,"endColumn":13},{"ruleId":"332","severity":1,"message":"345","line":10,"column":6,"nodeType":"334","endLine":10,"endColumn":14,"suggestions":"350"},{"ruleId":"307","severity":1,"message":"338","line":16,"column":7,"nodeType":"309","messageId":"310","endLine":16,"endColumn":15},{"ruleId":"307","severity":1,"message":"351","line":20,"column":10,"nodeType":"309","messageId":"310","endLine":20,"endColumn":21},"no-native-reassign",["352"],"no-negated-in-lhs",["353"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'BottomAppBar' is defined but never used.","'SearchBar' is defined but never used.","'Clients' is defined but never used.",["352"],["353"],"'makeStyles' is defined but never used.","'EventIcon' is defined but never used.",["352"],["353"],"'useEffect' is defined but never used.","'activeLeads' is assigned a value but never used.","'setActiveLeads' is assigned a value but never used.","'Alert' is defined but never used.","'screen' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'setAllClients' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterEstablishment' and 'type'. Either include them or remove the dependency array.","ArrayExpression",["354"],["352"],["353"],"'location' is assigned a value but never used.","'listLeads' is assigned a value but never used.","'setListLeads' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'leadList' and 'outList'. Either include them or remove the dependency array.",["355"],"'pushNewLead' is defined but never used.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'validateValues'. Either include it or remove the dependency array.",["356"],"'newLeadAdd' is assigned a value but never used.","'convert' is assigned a value but never used.",["357"],["358"],"'coordinates' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"363","fix":"365"},{"desc":"363","fix":"366"},"Update the dependencies array to be: [clientsData, filterEstablishment, leadsData, type]",{"range":"367","text":"368"},"Update the dependencies array to be: [walkScriptData, clientsData, leadsData, leadList, outList]",{"range":"369","text":"370"},"Update the dependencies array to be: [validateValues, values]",{"range":"371","text":"372"},{"range":"373","text":"372"},{"range":"374","text":"372"},[1908,1932],"[clientsData, filterEstablishment, leadsData, type]",[1562,1602],"[walkScriptData, clientsData, leadsData, leadList, outList]",[332,340],"[validateValues, values]",[332,340],[332,340]]